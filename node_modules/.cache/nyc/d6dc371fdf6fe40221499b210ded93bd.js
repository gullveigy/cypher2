'use strict';

var cov_jtyoso4xi = function () {
  var path = 'C:\\Users\\dell\\Desktop\\accountingtestings\\routes\\index.js',
      hash = 'bacd24e332cbfd5b62ed59f814e296b48d88a51f',
      Function = function () {}.constructor,
      global = new Function('return this')(),
      gcv = '__coverage__',
      coverageData = {
    path: 'C:\\Users\\dell\\Desktop\\accountingtestings\\routes\\index.js',
    statementMap: {
      '0': {
        start: {
          line: 1,
          column: 14
        },
        end: {
          line: 1,
          column: 32
        }
      },
      '1': {
        start: {
          line: 2,
          column: 13
        },
        end: {
          line: 2,
          column: 29
        }
      },
      '2': {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 7,
          column: 3
        }
      },
      '3': {
        start: {
          line: 6,
          column: 2
        },
        end: {
          line: 6,
          column: 44
        }
      },
      '4': {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 24
        }
      }
    },
    fnMap: {
      '0': {
        name: '(anonymous_0)',
        decl: {
          start: {
            line: 5,
            column: 16
          },
          end: {
            line: 5,
            column: 17
          }
        },
        loc: {
          start: {
            line: 5,
            column: 41
          },
          end: {
            line: 7,
            column: 1
          }
        },
        line: 5
      }
    },
    branchMap: {},
    s: {
      '0': 0,
      '1': 0,
      '2': 0,
      '3': 0,
      '4': 0
    },
    f: {
      '0': 0
    },
    b: {},
    _coverageSchema: '332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'
  },
      coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  coverageData.hash = hash;
  return coverage[path] = coverageData;
}();

var express = (cov_jtyoso4xi.s[0]++, require('express'));
var router = (cov_jtyoso4xi.s[1]++, express.Router());

/* GET home page. */
cov_jtyoso4xi.s[2]++;
router.get('/', function (req, res, next) {
  cov_jtyoso4xi.f[0]++;
  cov_jtyoso4xi.s[3]++;

  res.render('index', { title: 'Express' });
});

cov_jtyoso4xi.s[4]++;
module.exports = router;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImV4cHJlc3MiLCJyZXF1aXJlIiwicm91dGVyIiwiUm91dGVyIiwiZ2V0IiwicmVxIiwicmVzIiwibmV4dCIsInJlbmRlciIsInRpdGxlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLElBQUlBLGlDQUFVQyxRQUFRLFNBQVIsQ0FBVixDQUFKO0FBQ0EsSUFBSUMsZ0NBQVNGLFFBQVFHLE1BQVIsRUFBVCxDQUFKOztBQUVBOztBQUNBRCxPQUFPRSxHQUFQLENBQVcsR0FBWCxFQUFnQixVQUFTQyxHQUFULEVBQWNDLEdBQWQsRUFBbUJDLElBQW5CLEVBQXlCO0FBQUE7QUFBQTs7QUFDdkNELE1BQUlFLE1BQUosQ0FBVyxPQUFYLEVBQW9CLEVBQUVDLE9BQU8sU0FBVCxFQUFwQjtBQUNELENBRkQ7OztBQUlBQyxPQUFPQyxPQUFQLEdBQWlCVCxNQUFqQiIsImZpbGUiOiJpbmRleC5qcyIsInNvdXJjZVJvb3QiOiJDOi9Vc2Vycy9kZWxsL0Rlc2t0b3AvYWNjb3VudGluZ3Rlc3RpbmdzL3JvdXRlcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpO1xudmFyIHJvdXRlciA9IGV4cHJlc3MuUm91dGVyKCk7XG5cbi8qIEdFVCBob21lIHBhZ2UuICovXG5yb3V0ZXIuZ2V0KCcvJywgZnVuY3Rpb24ocmVxLCByZXMsIG5leHQpIHtcbiAgcmVzLnJlbmRlcignaW5kZXgnLCB7IHRpdGxlOiAnRXhwcmVzcycgfSk7XG59KTtcblxubW9kdWxlLmV4cG9ydHMgPSByb3V0ZXI7XG4iXX0=